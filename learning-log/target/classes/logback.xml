<?xml version="1.0" encoding="UTF-8" ?>
<configuration debug="true">

    <!--<property resource="config.properties"/>-->

    <property name="LOG_SAVE_DAY" value="20" />
    <property name="MAX_FILE_SIZE" value="100MB" />
    <property name="LOG_FILE_NAME_PREFIX" value="learning-log-" />
    <property name="ROLLING_FILE_SUBFFIX" value=".%d{yyyy-MM-dd}-%i" />
    <property name="LAYOUT_FORMAT" value="[%d{yyyy-MM-dd HH:mm:ss}] [%thread] %-5level %logger{40} [%L]-> [%X{trackId}] %msg%n" />
    <property name="LOG_LEVEL" value="INFO"/>
    <property name="LOG_STORE_PATH" value="./logs"/>


    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LAYOUT_FORMAT}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${LOG_LEVEL}</level>
        </filter>
    </appender>

    <appender name="DebugAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}debug.log${ROLLING_FILE_SUBFFIX}</FileNamePattern>
            <MaxHistory>${LOG_SAVE_DAY}</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LAYOUT_FORMAT}</pattern>
        </encoder>
    </appender>

    <appender name="InfoAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}info.log${ROLLING_FILE_SUBFFIX}</FileNamePattern>
            <MaxHistory>${LOG_SAVE_DAY}</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LAYOUT_FORMAT}</pattern>
        </encoder>
    </appender>

    <appender name="WarnAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}warn.log${ROLLING_FILE_SUBFFIX}</FileNamePattern>
            <MaxHistory>${LOG_SAVE_DAY}</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LAYOUT_FORMAT}</pattern>
        </encoder>
    </appender>

    <appender name="ErrorAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_STORE_PATH}/${LOG_FILE_NAME_PREFIX}error.log${ROLLING_FILE_SUBFFIX}</FileNamePattern>
            <MaxHistory>${LOG_SAVE_DAY}</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LAYOUT_FORMAT}</pattern>
        </encoder>
    </appender>

    <root level="${LOG_LEVEL}">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="InfoAppender" />
        <appender-ref ref="WarnAppender" />
        <appender-ref ref="ErrorAppender" />
        <appender-ref ref="DebugAppender" />
    </root>

</configuration>